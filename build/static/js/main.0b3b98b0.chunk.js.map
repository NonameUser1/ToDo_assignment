{"version":3,"sources":["firebase/context.js","firebase/config.js","firebase/index.js","components/Authorithation/LogIn.js","components/Authorithation/SingUp.js","components/TaskItem/TaskItem.js","components/TaskList/index.js","components/TaskList/TaskList.js","components/Header/index.js","components/Header/Header.js","components/NewTask/index.js","components/NewTask/NewTask.js","App.js","Router.js","serviceWorker.js","index.js"],"names":["React","createContext","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","LogInForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","password","handleInputChange","bind","assertThisInitialized","handleSubmit","e","setState","defineProperty","target","id","value","preventDefault","auth","signInWithEmailAndPassword","catch","error","alert","code","message","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","Link","to","Component","SignUpForm","username","_this2","createUserWithEmailAndPassword","then","firestore","collection","add","concat","TaskItem","handleCheckbox","handleDelete","status","isChecked","writeThis","doc","docId","update","delete","updateList","onClick","ref","task","TaskList","taskInfo","loaded","getTasks","listUpdate","userId","where","get","snapshot","docs","forEach","push","data","_this3","map","taskItem","components_TaskItem_TaskItem","key","shouldListUpdate","listResponse","Header","logOutHandle","signOut","NewTask","handleSave","refs","newTaskInput","replace","creator","App","giveUsername","rerenderList","listRerendered","rerenderTest","currentUser","components_Header","components_NewTask","components_TaskList","Router","Switch","Router_ForAuthorized","isAuthorized","path","component","Router_ForUnauthorized","LogIn","SingUp","Router_OtherRoutes","OtherRoutes","Redirect","ForAuthorized","Route","test","ForUnauthorized","Boolean","window","location","hostname","match","onAuthStateChanged","user","authorized","ReactDOM","render","BrowserRouter","src_Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b3b98b0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst firebaseContext = React.createContext(null);\r\n\r\nexport default firebaseContext;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAJfUymq_ZBOXeNaItfeon8jN8bs_eoa6Y\",\r\n    authDomain: \"stafftodo-4ef6c.firebaseapp.com\",\r\n    databaseURL: \"https://stafftodo-4ef6c.firebaseio.com\",\r\n    projectId: \"stafftodo-4ef6c\",\r\n    storageBucket: \"stafftodo-4ef6c.appspot.com\",\r\n    messagingSenderId: \"61743514430\"\r\n};\r\nfirebase.initializeApp(config);\r\n// firebase.firestore().settings({timestampsInSnapshots: true});\r\n\r\nexport default firebase;","import FirebaseContext from './context';\r\nimport Firebase from './config';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext };","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from '../../firebase';\r\nimport './forms.scss';\r\n\r\nclass LogInForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email:'' ,\r\n            password:''\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(e){\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n            .catch(function(error) {\r\n                alert(error.code);\r\n                alert(error.message);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='authForm'>\r\n                <form className='authForm__form' onSubmit={this.handleSubmit}>\r\n                    <h5 className='authForm__title'>Log In</h5>\r\n                    <input type='email'\r\n                           id='email'\r\n                           placeholder='Email'\r\n                           className='authForm__input'\r\n                           onChange={this.handleInputChange}/>\r\n                    <input type='password'\r\n                           id='password'\r\n                           placeholder='Password'\r\n                           className='authForm__input'\r\n                           onChange={this.handleInputChange} />\r\n                    <input className='authForm__input--submit-btn' type='submit' value='Log in'/>\r\n                    <Link className='authForm__link' to='/signUp'>Dont have an account yet?</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogInForm;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport firebase from '../../firebase';\r\n\r\nimport './forms.scss';\r\n\r\nclass SignUpForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            email:'' ,\r\n            password:''\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(e){\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then(()=>{\r\n                firebase.firestore().collection('users').add({\r\n                    email:this.state.email,\r\n                    password:this.state.password,\r\n                    username: this.state.username\r\n                });\r\n            })\r\n            .catch((error)=>{\r\n                alert(`${error.message}  ${error.code}`);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='authForm'>\r\n                <form className='authForm__form' onSubmit={this.handleSubmit}>\r\n                    <h5 className='authForm__title'>Sign Up</h5>\r\n                    <input type='text'\r\n                           id='username'\r\n                           placeholder='Nickname'\r\n                           className='authForm__input'\r\n                           value={this.state.username}\r\n                           onChange={this.handleInputChange}/>\r\n                    <input type='email'\r\n                           id='email'\r\n                           placeholder='Email'\r\n                           className='authForm__input'\r\n                           value={this.state.email}\r\n                           onChange={this.handleInputChange}/>\r\n                    <input type='password'\r\n                           id='password'\r\n                           placeholder='Password'\r\n                           className='authForm__input'\r\n                           value={this.state.password}\r\n                           onChange={this.handleInputChange}/>\r\n                    <input type='submit' className='authForm__input--submit-btn' value='Sign up'/>\r\n                    <Link className='authForm__link' to='/logIn'>Already have an account?</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SignUpForm;","import React, {Component} from 'react';\r\nimport firebase from '../../firebase';\r\nimport './taskItem.scss';\r\n\r\nclass TaskItem extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleCheckbox = this.handleCheckbox.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.state={\r\n            status: this.props.status,\r\n            isChecked: this.props.status === 'done'\r\n        }\r\n    }\r\n\r\n    handleCheckbox(){\r\n        const writeThis = this.state.status === 'done' ? 'undone' : 'done';\r\n        firebase.firestore().collection('user_tasks')\r\n            .doc(this.props.docId).update({\r\n                status: writeThis\r\n            })\r\n            .then(()=>{\r\n                this.setState({\r\n                    status: this.state.status === 'done' ? 'undone' : 'done',\r\n                    isChecked: !this.state.isChecked\r\n                });\r\n            });\r\n    }\r\n    async handleDelete(){\r\n        await firebase.firestore().collection('user_tasks')\r\n            .doc(this.props.docId).delete()\r\n            .then(this.props.updateList);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n          <div className='taskItem'>\r\n              <div onClick={this.handleCheckbox} className={this.state.isChecked ? 'checkbox--checked': 'checkbox'}/>\r\n              <p className={this.state.isChecked ? 'taskItem__task--done':'taskItem__task'} ref='task'>\r\n                  {this.props.task}\r\n              </p>\r\n              <button className='taskItem__btn' onClick={this.handleDelete}>\r\n                  <i className='fa fa-trash' ></i>\r\n              </button>\r\n          </div>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;","import TaskList from './TaskList';\r\nexport default TaskList;","import React, {Component} from 'react';\r\nimport TaskItem from '../TaskItem/TaskItem';\r\nimport firebase from '../../firebase';\r\nimport './tasklist.scss';\r\n\r\nclass TaskList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            taskInfo: [] ,\r\n            loaded: false\r\n        };\r\n        this.getTasks = this.getTasks.bind(this);\r\n        this.listUpdate = this.listUpdate.bind(this);\r\n    }\r\n    componentWillMount(){\r\n        this.getTasks(this.props.userId);\r\n    }\r\n    async getTasks(userId) {\r\n        let taskInfo =[];\r\n        firebase.firestore().collection('user_tasks').where('creator', '==', userId).get().then((snapshot) => {\r\n            snapshot.docs.forEach(doc => {\r\n                taskInfo.push({task: doc.data().task , status: doc.data().status , docId: doc.id })\r\n            });\r\n            this.setState({loaded: true, taskInfo: taskInfo});\r\n        });\r\n    }\r\n    listUpdate(){\r\n        this.getTasks(this.props.userId);\r\n    }\r\n    render() {\r\n        return !this.state.loaded\r\n            ? <span>Loading ... </span>\r\n            : <div className='taskList'>\r\n                {this.state.taskInfo.map((taskItem)=>{\r\n                    return <TaskItem\r\n                        task = {taskItem.task}\r\n                        status = {taskItem.status}\r\n                        key = {taskItem.docId}\r\n                        docId = {taskItem.docId}\r\n                        updateList = {this.listUpdate}\r\n                    />\r\n                })}\r\n              </div>\r\n    }\r\n    componentDidUpdate() {\r\n        if(this.props.shouldListUpdate){\r\n            this.getTasks(this.props.userId);\r\n            this.props.listResponse();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default TaskList;","import Header from './Header';\r\nexport default Header;","import React, {Component} from 'react';\r\nimport firebase from '../../firebase';\r\nimport './header.scss';\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.logOutHandle = this.logOutHandle.bind(this);\r\n    }\r\n\r\n    logOutHandle(){\r\n        firebase.auth().signOut().catch(function(error) {\r\n            alert(`${error.code}   ${error.message}`);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='header'>\r\n                <h1 className='header__title'>Hi, {this.props.username}</h1>\r\n                <button className='header__logOut' onClick={this.logOutHandle}>Log out</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import NewTask from './NewTask';\r\nexport default NewTask;","import React, {Component} from 'react';\r\nimport firebase from '../../firebase';\r\nimport './newTask.scss';\r\n\r\nclass NewTask extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    async handleSave(){\r\n        const value = this.refs.newTaskInput.value;\r\n        if(value.replace(/\\s/g,'')===''){\r\n            this.refs.newTaskInput.value = 'Hey! Type something';\r\n            return null;\r\n        }\r\n        await firebase.firestore().collection('user_tasks').add({\r\n            creator:this.props.userId,\r\n            status:'undone',\r\n            task: value\r\n        }).then(()=> {\r\n            this.props.updateList();\r\n        });\r\n        this.refs.newTaskInput.value = '';\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='newTask'>\r\n                <h1 className='newTask__title' >New task?</h1>\r\n                <input  className='newTask__input'\r\n                        type='text' ref='newTaskInput'\r\n                        placeholder='Type your task'/>\r\n                <button className='newTask__btn' onClick={this.handleSave} >Save</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTask;","import React, { Component } from 'react';\nimport TaskList from './components/TaskList';\nimport Header from './components/Header';\nimport NewTask from './components/NewTask';\n\nimport firebase from './firebase';\n\nimport './App.scss';\nimport './responcive.scss';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.giveUsername = this.giveUsername.bind(this);\n        this.rerenderList = this.rerenderList.bind(this);\n        this.listRerendered = this.listRerendered.bind(this);\n        this.state = {\n            userId :   null,\n            username : null,\n            loaded:    false,\n            rerenderTest: false\n        };\n    }\n    rerenderList(){\n        this.setState({\n            rerenderTest: true,\n        })\n    }\n    listRerendered(){\n        this.setState({\n            rerenderTest: false,\n        })\n    }\n    componentWillMount() {\n        const userId = firebase.auth().currentUser.email;\n        this.giveUsername(userId);\n    }\n    async giveUsername(userId){\n        let username ;\n        await firebase.firestore().collection('users').where('email', '==', userId).get().then((snapshot) =>{\n            snapshot.docs.forEach(doc =>{\n                username = doc.data().username;\n            });\n        }).catch((error)=>alert(error));\n        this.setState( {\n            userId : userId,\n            username : username,\n            loaded: true\n        });\n    }\n\n    render() {\n        return (\n          !this.state.loaded\n          ? <span>Loading ... </span>\n          : <div className='App'>\n                <Header   username={this.state.username}/>\n                <NewTask  userId={this.state.userId} updateList={this.rerenderList} />\n                <TaskList userId={this.state.userId}\n                          shouldListUpdate={this.state.rerenderTest}\n                          listResponse={this.listRerendered}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, {Component} from 'react';\r\nimport { Switch, Route , Redirect } from 'react-router-dom';\r\nimport LogIn from './components/Authorithation/LogIn';\r\nimport SingUp from './components/Authorithation/SingUp';\r\nimport App from './App';\r\n\r\nclass Router extends Component{\r\n    render(){\r\n        return(\r\n          <Switch>\r\n              <ForAuthorized    isAuthorized={this.props.isAuthorized}  path='/home'   component={App}/>\r\n              <ForUnauthorized  isAuthorized={this.props.isAuthorized}  path='/logIn'  component={LogIn}/>\r\n              <ForUnauthorized  isAuthorized={this.props.isAuthorized}  path='/signUp' component={SingUp}/>\r\n              <OtherRoutes      isAuthorized={this.props.isAuthorized} />\r\n          </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nclass OtherRoutes extends Router{\r\n    render() {\r\n        return this.props.isAuthorized\r\n            ? <Redirect to='/home'/>\r\n            : <Redirect to='/signUp'/>\r\n    }\r\n}\r\n\r\nclass ForAuthorized extends Router{\r\n    render() {\r\n        return this.props.isAuthorized\r\n            ? <Route path='/home' component={App} test={'hello there'}/>\r\n            : <Redirect to='/signUp'/>\r\n    }\r\n}\r\n\r\nclass ForUnauthorized extends Router{\r\n    render() {\r\n        const path = this.props.path;\r\n        const component = this.props.component;\r\n        return this.props.isAuthorized\r\n            ? <Redirect to='/home'/>\r\n            : <Route path={path} component={component} />\r\n    }\r\n}\r\n\r\nexport default Router;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from './firebase';\n\nfirebase.auth().onAuthStateChanged(function(user) {\n    const authorized = user ? true :false;\n    ReactDOM.render(\n        <BrowserRouter>\n            <Router isAuthorized={authorized}/>\n        </BrowserRouter>\n        , document.getElementById('root'));\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}